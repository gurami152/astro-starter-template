---
import BaseLayout from "../base/BaseLayout.astro";
import Container from "../../components/base/Container.astro";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string;
  publishDate?: Date;
  author?: string;
  tags?: string[];
  class?: string;
}

const {
  title = 'Blog Post',
  description,
  image,
  canonical,
  publishDate,
  author,
  tags = [],
  class: className = '',
} = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<BaseLayout title={title} description={description} image={image} canonical={canonical}>
  <Container class={`py-12 md:py-16 max-w-4xl mx-auto ${className}`}>
    <article class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 md:p-12">
      <header class="mb-12 text-center border-b border-gray-200 dark:border-gray-700 pb-8">
        <h1 class="text-4xl md:text-6xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
          {title}
        </h1>
        
        {description && (
          <p class="text-xl md:text-2xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed max-w-3xl mx-auto">
            {description}
          </p>
        )}
        
        <div class="flex items-center justify-center space-x-6 text-sm text-gray-500 dark:text-gray-400 mb-6">
          {publishDate && (
            <time datetime={publishDate.toISOString()} class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
              </svg>
              {formatDate(publishDate)}
            </time>
          )}
          
          {author && (
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
              </svg>
              by {author}
            </span>
          )}
        </div>
        
        {tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-3">
            {tags.map(tag => (
              <span class="px-4 py-2 bg-blue-600 text-white rounded-full text-sm font-medium shadow-md hover:shadow-lg transition-shadow duration-200">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>
      
      <div class="content max-w-none text-black dark:text-white">
        <slot />
      </div>
    </article>
  </Container>
</BaseLayout>

<style>
  .content :global(h2) {
    font-size: 1.875rem;
    line-height: 2.25rem;
    font-weight: 700;
    color: #111827;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    padding-bottom: 0.5rem;
  }
  
  .content :global(h3) {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 600;
    color: #1f2937;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .content :global(h4) {
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 500;
    color: #1f2937;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .content :global(p) {
    font-size: 1.125rem;
    line-height: 1.75rem;
    color: #000000;
    margin-bottom: 1.5rem;
    max-width: none;
  }
  
  .content :global(ul), .content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }
  
  .content :global(li) {
    font-size: 1.125rem;
    line-height: 1.75rem;
    color: #000000;
    margin-bottom: 0.5rem;
  }
  
  .content :global(li strong) {
    font-weight: 600;
    color: #111827;
  }
  
  .content :global(blockquote) {
    border-left: 4px solid #3b82f6;
    padding-left: 1.5rem;
    font-style: italic;
    color: #4b5563;
    margin: 2rem 0;
    background-color: #eff6ff;
    padding: 1rem;
    border-top-right-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
  }
  
  .content :global(code) {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-family: ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo, monospace;
    color: #1f2937;
    border: 1px solid #e5e7eb;
  }
  
  .content :global(pre) {
    background-color: #111827;
    padding: 1.5rem;
    border-radius: 0.75rem;
    overflow-x: auto;
    margin-bottom: 2rem;
    border: 1px solid #374151;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
  
  .content :global(pre code) {
    background-color: transparent;
    border: none;
    color: #f3f4f6;
    padding: 0;
  }
  
  .content :global(a) {
    color: #2563eb;
    text-decoration: underline;
    text-decoration-thickness: 2px;
    text-underline-offset: 2px;
    transition: color 0.2s;
  }
  
  .content :global(a:hover) {
    color: #1d4ed8;
  }
  
  .content :global(strong) {
    font-weight: 600;
    color: #111827;
  }
  
  .content :global(em) {
    font-style: italic;
    color: #1f2937;
  }
  
  .content :global(hr) {
    border-color: #e5e7eb;
    margin: 2rem 0;
  }
  
  /* Dark mode styles */
  :global(.dark) .content :global(h2) {
    color: #ffffff;
    border-bottom-color: #374151;
  }
  
  :global(.dark) .content :global(h3) {
    color: #e5e7eb;
  }
  
  :global(.dark) .content :global(h4) {
    color: #e5e7eb;
  }
  
  :global(.dark) .content :global(p) {
    color: #ffffff;
  }
  
  :global(.dark) .content :global(li) {
    color: #ffffff;
  }
  
  :global(.dark) .content :global(li strong) {
    color: #ffffff;
  }
  
  :global(.dark) .content :global(blockquote) {
    color: #9ca3af;
    background-color: rgba(59, 130, 246, 0.1);
  }
  
  :global(.dark) .content :global(code) {
    background-color: #374151;
    color: #e5e7eb;
    border-color: #4b5563;
  }
  
  :global(.dark) .content :global(pre) {
    background-color: #1f2937;
    border-color: #4b5563;
  }
  
  :global(.dark) .content :global(a) {
    color: #60a5fa;
  }
  
  :global(.dark) .content :global(a:hover) {
    color: #93c5fd;
  }
  
  :global(.dark) .content :global(strong) {
    color: #ffffff;
  }
  
  :global(.dark) .content :global(em) {
    color: #e5e7eb;
  }
  
  :global(.dark) .content :global(hr) {
    border-color: #374151;
  }
</style>

