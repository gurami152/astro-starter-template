---
import BaseLayout from "../base/BaseLayout.astro";
import Container from "../../components/base/Container.astro";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string;
  publishDate?: Date;
  author?: string;
  tags?: string[];
  class?: string;
}

const {
  title = 'Blog Post',
  description,
  image,
  canonical,
  publishDate,
  author,
  tags = [],
  class: className = '',
} = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<BaseLayout title={title} description={description} image={image} canonical={canonical}>
  <Container class={`py-8 md:py-12 max-w-4xl ${className}`}>
    <article class="prose prose-lg dark:prose-invert max-w-none">
      <header class="mb-8 text-center">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          {title}
        </h1>
        
        {description && (
          <p class="text-xl text-gray-600 dark:text-gray-300 mb-6">
            {description}
          </p>
        )}
        
        <div class="flex items-center justify-center space-x-4 text-sm text-gray-500 dark:text-gray-400">
          {publishDate && (
            <time datetime={publishDate.toISOString()}>
              {formatDate(publishDate)}
            </time>
          )}
          
          {author && (
            <span>by {author}</span>
          )}
        </div>
        
        {tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2 mt-4">
            {tags.map(tag => (
              <span class="px-3 py-1 bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>
      
      <div class="content">
        <slot />
      </div>
    </article>
  </Container>
</BaseLayout>

<style>
  @reference "tailwindcss";
  
  .content :global(h2) {
    @apply text-2xl font-bold text-gray-900 dark:text-white mt-8 mb-4;
  }
  
  .content :global(h3) {
    @apply text-xl font-semibold text-gray-900 dark:text-white mt-6 mb-3;
  }
  
  .content :global(p) {
    @apply text-gray-700 dark:text-gray-300 mb-4 leading-relaxed;
  }
  
  .content :global(ul), .content :global(ol) {
    @apply mb-4 pl-6;
  }
  
  .content :global(li) {
    @apply text-gray-700 dark:text-gray-300 mb-1;
  }
  
  .content :global(blockquote) {
    @apply border-l-4 border-blue-500 pl-4 italic text-gray-600 dark:text-gray-400 my-6;
  }
  
  .content :global(code) {
    @apply bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded text-sm;
  }
  
  .content :global(pre) {
    @apply bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto mb-4;
  }
</style>
